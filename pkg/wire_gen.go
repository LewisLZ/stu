// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package pkg

import (
	"github.com/google/wire"
	"liuyu/stu/pkg/datasource"
	"liuyu/stu/pkg/service"
	"liuyu/stu/pkg/web"
	"liuyu/stu/pkg/web/hdl"
)

// Injectors from wire.go:

func New() (*App, error) {
	opt := defaultDsOpt()
	ds := datasource.CreateDs(opt)
	stu := &hdl.Stu{}
	teacher := &service.Teacher{
		Ds: ds,
	}
	hdlTeacher := &hdl.Teacher{
		Ds:             ds,
		TeacherService: teacher,
	}
	pub := &hdl.Pub{
		Ds: ds,
	}
	user := &hdl.User{
		Ds: ds,
	}
	mid := &hdl.Mid{
		Ds: ds,
	}
	curriculum := &service.Curriculum{
		Ds: ds,
	}
	hdlCurriculum := &hdl.Curriculum{
		Ds:                ds,
		CurriculumService: curriculum,
	}
	class := &service.Class{
		Ds: ds,
	}
	hdlClass := &hdl.Class{
		Ds:           ds,
		ClassService: class,
	}
	hdlHdl := &hdl.Hdl{
		Ds:         ds,
		Stu:        stu,
		Teacher:    hdlTeacher,
		Pub:        pub,
		User:       user,
		Mid:        mid,
		Curriculum: hdlCurriculum,
		Class:      hdlClass,
	}
	webWeb := &web.Web{
		Hdl: hdlHdl,
		Ds:  ds,
	}
	webOpt := defaultWebOpt()
	app := &App{
		Web:    webWeb,
		WebOpt: webOpt,
	}
	return app, nil
}

// wire.go:

var appSet = wire.NewSet(wire.Struct(new(App), "*"), defaultDsOpt,
	defaultWebOpt, datasource.CreateDs, webSet,
	helSet,
	srvSet,
)

var webSet = wire.NewSet(wire.Struct(new(web.Web), "*"))

var helSet = wire.NewSet(wire.Struct(new(hdl.Hdl), "*"), wire.Struct(new(hdl.Stu), "*"), wire.Struct(new(hdl.Pub), "*"), wire.Struct(new(hdl.Teacher), "*"), wire.Struct(new(hdl.User), "*"), wire.Struct(new(hdl.Mid), "*"), wire.Struct(new(hdl.Curriculum), "*"), wire.Struct(new(hdl.Class), "*"))

var srvSet = wire.NewSet(wire.Struct(new(service.Teacher), "*"), wire.Struct(new(service.Curriculum), "*"), wire.Struct(new(service.Class), "*"))
